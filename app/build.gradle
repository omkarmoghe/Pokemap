apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.getkeepsafe.dexcount'

def getVersionCode = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : 1
    return code
}
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"
    defaultConfig {
        applicationId "com.omkarmoghe.pokemap"
        minSdkVersion 17
        targetSdkVersion 24
        multiDexEnabled true
        versionCode getVersionCode()
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

//https://jitpack.io/#Grover-c13/PokeGOAPI-Java/4f5b715380
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    def coreLibs = rootProject.ext.coreLibs
    compile coreLibs.retrofit
    compile coreLibs.retrofitGson
    compile coreLibs.eventBus
    compile coreLibs.pokemonGoAPI
    compile coreLibs.glide
    compile coreLibs.ersistentCookieJar

    //UiLibs
    def uiLibs = rootProject.ext.uiLibs
    compile uiLibs.appCompat
    compile uiLibs.design
    compile uiLibs.support
    compile uiLibs.cardview

    //Google Play Services
    compile uiLibs.support
    compile uiLibs.cardview
    compile uiLibs.playServicesMaps
    compile uiLibs.playServicesLocation


    //Test
    def testLibs = rootProject.ext.unitTestLibs

    testCompile testLibs.junit
    testCompile testLibs.mockitoCore
    testCompile testLibs.mockitoJunit
    testCompile testLibs.powerMockApi
    androidTestCompile(testLibs.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}
